{"version":3,"sources":["../src/snakegame/index.js"],"names":["GRID_SIZE","BG_COLOUR","SNAKE_COLOUR","FOOD_COLOUR","FRAME_RATE","canvas","ctx","gameActive","localData","last_score","best_score","ls","JSON","parse","localStorage","getItem","console","log","player","pos","x","y","vel","snake","food","init","document","getElementById","getContext","width","height","fillStyle","fillRect","randomFood","addEventListener","keydown","e","keyCode","paintGame","size","paintPlayer","cell","Math","floor","random","checkWall","gameLoop","push","length","shift","cnt","endGame","setItem","stringify","alert","startGameInterval","interval","setInterval","clearInterval"],"mappings":"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","file":"snakegame.c9757714.js","sourceRoot":"..\\public","sourcesContent":["const GRID_SIZE = 20\r\nconst BG_COLOUR = '#231f20'\r\nconst SNAKE_COLOUR = '#c2c2c2'\r\nconst FOOD_COLOUR = '#e66916'\r\nconst FRAME_RATE = 10\r\n\r\nlet canvas, ctx\r\nlet gameActive = ''\r\n\r\nlet localData = {\r\n    last_score: [],\r\n    best_score: 3\r\n}\r\n\r\nls = JSON.parse(localStorage.getItem('localData'))\r\nif (ls != null)\r\n    localData = ls\r\nconsole.log(localData)\r\n\r\nlet player = {\r\n    pos: {\r\n        x: 3,\r\n        y: 10,\r\n    },\r\n    vel: {\r\n        x: 1,\r\n        y: 0,\r\n    },\r\n    snake: [\r\n        {x: 1, y: 10},\r\n        {x: 2, y: 10},\r\n        {x: 3, y: 10},\r\n    ],\r\n}\r\n\r\nlet food = {}\r\n\r\nfunction init() {\r\n    canvas = document.getElementById('canvas')\r\n    ctx = canvas.getContext('2d')\r\n\r\n    canvas.width = canvas.height = 600\r\n\r\n    ctx.fillStyle = BG_COLOUR\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n    randomFood()\r\n\r\n    document.addEventListener('keydown', keydown)\r\n}\r\n\r\nfunction keydown(e) {\r\n    let keyCode = e.keyCode\r\n    switch (keyCode) {\r\n        case 37: { // left\r\n            if (player.vel.x !== 1)\r\n                player.vel = { x: -1, y: 0 }\r\n            break\r\n        }\r\n        case 65: { // left\r\n            if (player.vel.x !== 1)\r\n                player.vel = { x: -1, y: 0 }\r\n            break\r\n        }\r\n        case 38: { // up\r\n            if (player.vel.y !== 1)\r\n                player.vel = { x: 0, y: -1 }\r\n            break\r\n        }\r\n        case 87: { // up\r\n            if (player.vel.y !== 1)\r\n                player.vel = { x: 0, y: -1 }\r\n            break\r\n        }\r\n        case 39: { // right\r\n            if (player.vel.x !== -1)\r\n                player.vel =  { x: 1, y: 0 }\r\n            break\r\n        }\r\n        case 68: { // right\r\n            if (player.vel.x !== -1)\r\n                player.vel =  { x: 1, y: 0 }\r\n            break\r\n        }\r\n        case 40: { // down\r\n            if (player.vel.y !== -1)\r\n                player.vel =  { x: 0, y: 1 }\r\n            break\r\n        }\r\n        case 83: { // down\r\n            if (player.vel.y !== -1)\r\n                player.vel =  { x: 0, y: 1 }\r\n            break\r\n        }\r\n    }\r\n}\r\n\r\nfunction paintGame() {\r\n    ctx.fillStyle = BG_COLOUR\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height)\r\n\r\n    let size = canvas.width / GRID_SIZE\r\n\r\n    ctx.fillStyle = FOOD_COLOUR\r\n    ctx.fillRect(food.x * size, food.y * size, size, size)\r\n\r\n    paintPlayer(size)\r\n}\r\n\r\nfunction paintPlayer(size) {\r\n    ctx.fillStyle = SNAKE_COLOUR\r\n    for (let cell of player.snake) {\r\n        ctx.fillRect(cell.x * size, cell.y * size, size, size)\r\n    }\r\n}\r\n\r\nfunction randomFood() {\r\n    food = {\r\n        x: Math.floor(Math.random() * GRID_SIZE),\r\n        y: Math.floor(Math.random() * GRID_SIZE),\r\n    }\r\n\r\n    for (let cell of player.snake) {\r\n        if (cell.x === food.x && cell.y === food.y) {\r\n            return randomFood()\r\n        }\r\n    }\r\n}\r\n\r\nfunction checkWall() {\r\n    if (player.pos.x < 0) {\r\n        player.pos.x = GRID_SIZE - 1\r\n        return\r\n    }\r\n    if (player.pos.x === GRID_SIZE) {\r\n        player.pos.x = 0\r\n        return\r\n    }\r\n    if (player.pos.y < 0) {\r\n        player.pos.y = GRID_SIZE - 1\r\n        return\r\n    }\r\n    if (player.pos.y === GRID_SIZE) {\r\n        player.pos.y = 0\r\n    }\r\n}\r\n\r\nfunction gameLoop() {\r\n    player.pos.x += player.vel.x\r\n    player.pos.y += player.vel.y\r\n\r\n    checkWall()\r\n\r\n    player.snake.push({...player.pos})\r\n\r\n    if (food.x === player.pos.x && food.y === player.pos.y) {\r\n        if (player.snake.length === 400){\r\n            gameActive = 'WIN'\r\n            return\r\n        }\r\n        randomFood()\r\n    }\r\n    else {\r\n        player.snake.shift()\r\n    }\r\n\r\n    let cnt = 0\r\n    for (let cell of player.snake) {\r\n        if (cell.x === player.pos.x && cell.y === player.pos.y) {\r\n            cnt++\r\n            if (cnt > 1) {\r\n                gameActive = 'LOSE'\r\n                return\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction endGame(){\r\n    if (localData.best_score < player.snake.length)\r\n        localData.best_score = player.snake.length\r\n\r\n    localData.last_score.push(player.snake.length)\r\n    if (localData.last_score.length > 10)\r\n        localData.last_score.shift()\r\n\r\n    localStorage.setItem('localData', JSON.stringify(localData))\r\n    alert(`YOU ${gameActive}!\\n\r\n    Score: ${player.snake.length}\\n\r\n    Best: ${localData.best_score}\\n\r\n    Last: ${localData.last_score}`)\r\n}\r\n\r\nfunction startGameInterval() {\r\n    const interval = setInterval(() => {\r\n        gameLoop()\r\n\r\n        if (gameActive) {\r\n            clearInterval(interval)\r\n            endGame()\r\n        } else {\r\n            paintGame()\r\n        }\r\n\r\n    }, 1000 / FRAME_RATE)\r\n}\r\n\r\ninit()\r\nstartGameInterval()\r\n"]}